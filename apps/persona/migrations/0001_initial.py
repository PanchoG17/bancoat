# Generated by Django 3.2.1 on 2022-09-21 03:35

import datetime
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import smart_selects.db_fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('localizacion', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('clasificadores', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Persona',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fecha_creacion', models.DateTimeField(auto_now_add=True, null=True)),
                ('fecha_modificacion', models.DateTimeField(auto_now=True, null=True)),
                ('fecha_baja', models.DateTimeField(blank=True, editable=False, null=True)),
                ('activo', models.BooleanField(default=True, editable=False, verbose_name='Activo')),
                ('usuario_modificacion', models.IntegerField(blank=True, editable=False, null=True)),
                ('usuario_baja', models.IntegerField(blank=True, editable=False, null=True)),
                ('codigo_area_c', models.CharField(max_length=5, verbose_name='Cód. de área celular')),
                ('numero_telefono_c', models.CharField(max_length=7, verbose_name='Nro. de celular')),
                ('codigo_area_f', models.CharField(blank=True, max_length=5, null=True, verbose_name='Cód. de área teléfono fijo')),
                ('numero_telefono_f', models.CharField(blank=True, max_length=7, null=True, verbose_name='Nro. de teléfono fijo')),
                ('email', models.EmailField(max_length=254, verbose_name='E-mail de contacto')),
                ('calle', models.CharField(blank=True, max_length=100, null=True, verbose_name='Calle')),
                ('numero', models.CharField(blank=True, max_length=5, null=True, verbose_name='Altura calle')),
                ('zona', models.CharField(choices=[('R', 'RURAL'), ('U', 'URBANA'), ('M', 'MIXTA')], max_length=1, verbose_name='Zona')),
                ('numero_departamento', models.CharField(blank=True, max_length=5, null=True, verbose_name='Numero de departamento')),
                ('tira', models.CharField(blank=True, max_length=5, null=True, verbose_name='Numero de tira')),
                ('numero_piso', models.CharField(blank=True, max_length=5, null=True, verbose_name='Numero de piso')),
                ('lote', models.CharField(blank=True, max_length=5, null=True, verbose_name='Numero de lote')),
                ('macizo', models.CharField(blank=True, max_length=5, null=True, verbose_name='Numero de macizo')),
                ('manzana', models.CharField(blank=True, max_length=5, null=True, verbose_name='Numero de manzana')),
                ('parcela', models.CharField(blank=True, max_length=5, null=True, verbose_name='Numero de parcela')),
                ('seccion', models.CharField(blank=True, max_length=5, null=True, verbose_name='Numero de sección')),
                ('documento', models.PositiveIntegerField(unique=True, verbose_name='Numero de documento')),
                ('documento_tipo', models.CharField(choices=[('DU', 'Documento Único'), ('LC', 'Libreta Cívica')], max_length=2, verbose_name='Tipo de documento')),
                ('cuit', models.CharField(max_length=15, unique=True, verbose_name='CUIT / CUIL')),
                ('nombre', models.CharField(max_length=50, verbose_name='Nombres')),
                ('apellido', models.CharField(max_length=50, verbose_name='Apellidos')),
                ('fecha_nacimiento', models.DateField(verbose_name='Fecha de nacimiento')),
                ('barrio', smart_selects.db_fields.ChainedForeignKey(chained_field='localidad', chained_model_field='localidad', on_delete=django.db.models.deletion.CASCADE, to='localizacion.barrio')),
                ('estado_civil', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='clasificadores.estadocivil', verbose_name='Estado civíl')),
                ('genero', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='clasificadores.genero', verbose_name='Genero')),
                ('localidad', smart_selects.db_fields.ChainedForeignKey(chained_field='provincia', chained_model_field='provincia', on_delete=django.db.models.deletion.CASCADE, to='localizacion.localidad')),
                ('nacionalidad', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='localizacion.pais', verbose_name='Nacionalidad')),
                ('provincia', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='localizacion.provincia', verbose_name='Provincia')),
                ('tipo_vivienda', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='clasificadores.tipovivienda', verbose_name='Tipo de vivienda')),
                ('usuario_creador', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Persona',
                'verbose_name_plural': ' Personas',
                'db_table': 'persona',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='Responsable',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fecha_creacion', models.DateTimeField(auto_now_add=True, null=True)),
                ('fecha_modificacion', models.DateTimeField(auto_now=True, null=True)),
                ('fecha_baja', models.DateTimeField(blank=True, editable=False, null=True)),
                ('activo', models.BooleanField(default=True, editable=False, verbose_name='Activo')),
                ('usuario_modificacion', models.IntegerField(blank=True, editable=False, null=True)),
                ('usuario_baja', models.IntegerField(blank=True, editable=False, null=True)),
                ('persona', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='persona.persona', verbose_name='Persona')),
                ('usuario_creador', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Responsable',
                'verbose_name_plural': 'Responsables',
                'db_table': 'responsable',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='Beneficiario',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('permanente', models.BooleanField(choices=[(True, 'SI'), (False, 'NO')], max_length=2, verbose_name='¿Es permanente la discapacidad?')),
                ('discapacidad', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='clasificadores.tipodiscapacidad', verbose_name='Discapadidad')),
                ('persona', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='persona.persona', verbose_name='Beneficiario')),
                ('responsable', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='persona.responsable', verbose_name='Responsable')),
                ('vinculo', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='clasificadores.tipoparentesco')),
            ],
            options={
                'verbose_name': 'Beneficiario',
                'verbose_name_plural': 'Beneficiarios',
                'db_table': 'beneficiario',
                'ordering': ['id'],
                'unique_together': {('persona', 'responsable')},
            },
        ),
        migrations.CreateModel(
            name='DocumentacionBeneficiario',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fecha_creacion', models.DateTimeField(auto_now_add=True, null=True)),
                ('fecha_modificacion', models.DateTimeField(auto_now=True, null=True)),
                ('fecha_baja', models.DateTimeField(blank=True, editable=False, null=True)),
                ('activo', models.BooleanField(default=True, editable=False, verbose_name='Activo')),
                ('archivo', models.ImageField(upload_to='documentacion', verbose_name='Imagen del archivo')),
                ('vencimiento', models.BooleanField(blank=True, choices=[(True, 'SI'), (False, 'NO')], default=True, null=True, verbose_name='¿Tiene vencimiento?')),
                ('fecha_vencimiento', models.DateField(blank=True, default=datetime.datetime.now, null=True, verbose_name='Fecha de vencimiento')),
                ('beneficiario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='persona.beneficiario', verbose_name='Beneficiario')),
                ('tipo_documento', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='clasificadores.tipodocumento', verbose_name='Documentacion')),
            ],
            options={
                'verbose_name': 'Documentación de Beneficiario',
                'verbose_name_plural': 'Documentación de Beneficiarios',
                'db_table': 'documentacion_beneficiario',
                'ordering': ['id'],
                'unique_together': {('beneficiario', 'tipo_documento', 'archivo')},
            },
        ),
    ]
